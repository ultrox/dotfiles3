[hub]
        protocol = https
[user]
        name = Marko Vujanic
        email = crashxx@gmail.com
        signingkey = FC08FB424DB5EE898968B3E645F3F797C3DD9227


#https://github.com/tummychow/git-absorb
#MacOS: brew install git-absorb
#Arch: yay -S git-absorb
#usage: git absorb --and-rebase 
[absorb]
    maxStack=20 # Or any other reasonable value for your project

[alias]
  syn = git fetch origin master:master
  rename = branch -m
  please = push --force-with-lease
  # http://gggritso.com/human-git-aliases
  unstage = reset -q HEAD --
  discard = checkout --
  #gcf â†’ git commit fixup (global alias)/
  fixup = !sh -c 'git commit --fixup=$1'

  uncommit = reset --mixed HEAD~
  undo = reset --soft HEAD~1
  amend = commit -a --amend

  prev = checkout HEAD^1
  next = "!sh -c 'git log --reverse --pretty=%H master | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout'"
  noa = commit --amend --no-edit
  nuke = "!sh -c 'git reset --hard && git clean -fd'"

  nshow=show ':(exclude)package-lock.json'
  ca = clean -fd
  aa = add --all
  au = add -u
  ss  = status
  s = status --short
  dnp=diff ":(exclude)package-lock.json"
  track = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
  l = "log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
  lg ="log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
  pullff=pull --ff-only
  pl=pull --rebase
    # list all aliases
  ls = "!git config -l | grep alias | cut -c 7-"

  delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"
  diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines
  co = checkout
  cob = checkout -b
  br = branch -v
  # rebase commands
  cont = rebase --continue
  conf = "!git s | grep ^U"

    # show what I did today
  day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"
  churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

  # show all deleted files in the repo
  deleted = "!git log --diff-filter=D --summary | grep delete"

  # create an empty commit
  empty = commit --allow-empty

  # current branch
  cbr = rev-parse --abbrev-ref HEAD

    # submodule shortcuts
  si = submodule init
  su = submodule update
  sub = "!git submodule sync && git submodule update"

    # show number of commits per contributer, sorted
  count = shortlog -sn

    # rebase the current branch with changes from upstream remote
  update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`

    # show the last tag
  lt = describe --tags --abbrev=0

    # show the most recently touched branches
  recent = for-each-ref --sort='-authordate:iso8601' refs/heads/ --format="%(authordate)%09%(objectname:short)%09%1B[0;33m%(refname:short)%1B[m%09"
  latest = "!git for-each-ref --sort='-committerdate' --format='%(color:red)%(refname)%(color:reset)%09%(committerdate)' refs/remotes | sed -e 's-refs/remotes/origin/--' | less -XFR"

    # grep commands

    # 'diff grep'
  dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
    # diff grep changes between two commits
  dgc = "!sh -c 'git ls-files | grep $1 | xargs git diff $2 $3 -- ' -"
    # 'checkout grep'
  cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
    # add grep
  ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add --all' -"
    # add all
  aa = !git ls-files -d | xargs git rm && git ls-files -m -o --exclude-standard | xargs git add
    # remove grep - Remove found files that are NOT under version control
  rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm' -"
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	g = grep --break --heading --line-number
	lgg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

  fzf = !"                                                                                                                                                                              \
        function gfzf() {                                                                                                                                                                 \
            local filter;                                                                                                                                                                 \
            if [ -n $@ ] && [ -e $@ ]; then                                                                                                                                               \
                filter=\"-- $@\";                                                                                                                                                         \
            fi;                                                                                                                                                                           \
            export LESS='-R -j10'                                                                                                                                                              \
            export BAT_PAGER='less -S -R -M -i -j10';                                                                                                                                          \
            git log                                                                                                                                                                       \
                --graph --color=always --abbrev=7                                                                                                                                         \
                --format=format:\"%C(bold blue)%h%C(reset) %C(dim white)%an%C(reset)%C(bold yellow)%d%C(reset) %C(white)%s%C(reset) %C(bold green)(%ar)%C(reset)\" $@ |                   \
                    fzf --ansi --no-sort --layout=reverse --tiebreak=index                                                                                                                \
                        --preview=\"f() { set -- \\$(echo -- \\$@ | rg -o '\\b[a-f0-9]{7,}\\b'); [ \\$# -eq 0 ] || git show --color=always \\$1 $filter | delta --line-numbers; }; f {}\" \
                        --bind=\"ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-j:preview-down,ctrl-k:preview-up,ctrl-f:preview-page-down,ctrl-b:preview-page-up\"                        \
                        --bind=\"ctrl-m:execute:                                                                                                                                          \
                                (rg -o '\\b[a-f0-9]{7,}\\b' | head -1 |                                                                                                                   \
                                xargs -I % -- git show --color=always %) << FZFEOF\n                                                                                                      \
                                {}                                                                                                                                                        \
                                \nFZFEOF\"                                                                                                                                                \
                        --bind=\"ctrl-y:execute-silent:                                                                                                                                   \
                                (rg -o '\\b[a-f0-9]{7,}\\b' | head -1 | tr -d \\$'\\n' | clipboard) << FZFEOF\n                                                                           \
                                {}                                                                                                                                                        \
                                \nFZFEOF\"                                                                                                                                                \
                        --preview-window=right:60%;                                                                                                                                       \
        };                                                                                                                                                                                \
        gfzf                                                                                                                                                                              \
    "

[color]
      diff = auto
      status = auto
      branch = auto
      interactive = auto
      ui = true
[color "branch"]
      current = green bold
      local = green
      remote = red bold
[color "status"]
      added = green bold
      changed = yellow bold
      untracked = red
[color "sh"]
      branch = yellow

[core]
	pager = diff-so-fancy | less --tabs=4 -RFX
        editor = vim
        whitespace = cr-at-eol
	excludesfile = /Users/marko.vujanic/.gitignore
        attributesfile = ~/.gitattributes

[pager]
    diff = diff-so-fancy
    log = diff-so-fancy
    reflog = diff-so-fancy
    show = diff-so-fancy

[interactive]
	diffFilter = diff-so-fancy --patch

[diff-so-fancy]
  stripLeadingSymbols = false
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[diff]
        renames = copies
        mnemonicprefix = true
        compactionHeuristic = true
[difftool]
        prompt = false
[grep]
        extendRegexp = true
	lineNumber = true
[rerere]
        enabled = false

[apply]
        # do not warn about missing whitespace at EOF
        whitespace = nowarn
[rebase]
        instructionFormat = "[%an - %ar] %s"
	# will sort fixup in the right place
        autosquash = false
[push]
        # push will only do the current branch, not all branches
        default = current
[branch]
         # set up 'git pull' to rebase instead of merge
         autosetuprebase = always
[github]
        user = ultrox
[credential]
	helper = cache --timeout=2628000
[web]
	browser = google-chrome
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[merge]
	conflictstyle = diff3
